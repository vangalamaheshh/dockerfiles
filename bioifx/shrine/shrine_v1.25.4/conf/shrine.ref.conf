shrine {
  pmEndpoint {
    url = "http://core:9090/i2b2/services/PMService/getServices"
  }
  ontEndpoint {
    url = "http://core:9090/i2b2/services/OntologyService"
  }
   
  hiveCredentials {
    domain = "i2b2demo"
    username = "demo"
    password = "demouser"
    crcProjectId = "Demo"
    ontProjectId = "SHRINE"
  }
 
  messagequeue {
    blockingq {
        serverUrl = "https://localhost:6443/shrine-metadata/mom"
    }
  }
   
  breakdownResultOutputTypes {
    PATIENT_AGE_COUNT_XML {
      description = "Age patient breakdown"
    }
    PATIENT_RACE_COUNT_XML {
      description = "Race patient breakdown"
    }
    PATIENT_VITALSTATUS_COUNT_XML {
      description = "Vital Status patient breakdown"
    }
    PATIENT_GENDER_COUNT_XML {
      description = "Gender patient breakdown"
    }
  }
 
  queryEntryPoint {
    create = true
    audit {
      collectQepAudit = false
      database {
        dataSourceFrom = "JNDI"
        jndiDataSourceName = "java:comp/env/jdbc/qepAuditDB"
        slickProfileClassName = "slick.jdbc.MySQLProfile$"
      }
    }
       
    trustModelIsHub = true
    attachSigningCert = true
    authenticationType = "pm"
    authorizationType = "shrine-steward"
  
    queuedQueryPollUrl = "https://localhost:6443/shrine/rest/i2b2/request" //Change to your url and port number
 
    shrineSteward {
      qepUserName = "qep"
      qepPassword = "demouser"
      stewardBaseUrl = "https://localhost:6443"
    }
 
      includeAggregateResults = false
       
      maxQueryWaitTime {
        minutes = 5
      }
 
    broadcasterServiceEndpoint {
        url = "https://localhost:6443/shrine/rest/broadcaster/broadcast"
    }
  } //end queryEntryPoint
 
  adapter {
    create = true
    audit {
      collectAdapterAudit = false
      database {
        dataSourceFrom = "JNDI"
        jndiDataSourceName = "java:comp/env/jdbc/adapterAuditDB"
        slickProfileClassName = "slick.jdbc.MySQLProfile$"
      }
    }
 
    crcEndpoint {
      url = "http://core:9090/i2b2/services/QueryToolService"
    }
 
    adapterLockoutAttemptsThreshold = 0
    setSizeObfuscation = true
    adapterMappingsFileName = "AdapterMappings.csv"
 
    maxSignatureAge {
      minutes = 5
    }
 
    immediatelyRunIncomingQueries = true
 
  } // end adapter
 
    networkStatusQuery = "\\\\SHRINE\\SHRINE\\Demographics\\Gender\\Male\\"
    humanReadableNodeName = "localhost"
    shrineDatabaseType = "mysql"
 
    keystore {
      file = "/opt/shrine/shrine.keystore"
      password = "sslpass"
      privateKeyAlias = "localhost"
      keyStoreType = "JKS"
      caCertAliases = ["shrine-hub-ca"]
    }
 
    problem {
      problemHandler = "net.shrine.problem.LogAndDatabaseProblemHandler$"
      database {
        dataSourceFrom = "JNDI"
        jndiDataSourceName = "java:comp/env/jdbc/problemDB"
        slickProfileClassName = "slick.jdbc.MySQLProfile$"
      }
    }
 
  dashboard {
    happyBaseUrl = "https://localhost:6443/shrine/rest/happy"
    statusBaseUrl = "https://localhost:6443/shrine/rest/internalstatus"
 
    database {
      dataSourceFrom = "JNDI"
      jndiDataSourceName = "java:comp/env/jdbc/problemDB"
      slickProfileClassName = "slick.jdbc.MySQLProfile$"
    }
  } //end dashboard
 
    status {
      permittedHostOfOrigin = "localhost"
    }
 
    squerylDataSource {
      database {
        dataSourceFrom = "JNDI"
        jndiDataSourceName = "java:comp/env/jdbc/shrineDB"
      }
    }
 
    authenticate {
      usersource {
        domain = "i2b2demo"
      }
    }
 
  steward {
    createTopicsMode = Approved
 
    emailDataSteward {
      sendAuditEmails = false  //false to turn off the whole works of emailing the data steward      //interval = "1 day" //Audit researchers daily
      //timeAfterMidnight = "6 hours" //Audit researchers at 6 am. If the interval is less than 1 day then this delay is ignored.
      //maxQueryCountBetweenAudits = 30 //If a researcher runs more than this many queries since the last audit audit her
      //minTimeBetweenAudits = "30 days" //If a researcher runs at least one query, audit those queries if this much time has passed
  
      //You must provide the email address of the shrine node system admin, to handle bounces and invalid addresses
      //from = "shrine-admin@example.com"
      //You must provide the email address of the data steward
      //to = "shrine-steward@example.com"
  
      //subject = "Audit SHRINE researchers"
      //The baseUrl for the data steward to be substituted in to email text. Must be supplied if it is used in the email text.
      //stewardBaseUrl = "https://example.com:6443/steward/"
      //externalStewardBaseUrl = "https://example.com:6443/steward/"
  
      //Text to use for the email audit.
      //AUDIT_LINES will be replaced by a researcherLine for each researcher to audit.
      //STEWARD_BASE_URL will be replaced by the value in stewardBaseUrl if available.
      //emailBody = """Please audit the following users at STEWARD_BASE_URL at your earliest convinience: AUDIT_LINES"""
      //note that this can be a multiline message
  
      //Text to use per researcher to audit.
      //FULLNAME, USERNAME, COUNT and LAST_AUDIT_DATE will be replaced with appropriate text.
      //researcherLine = "FULLNAME (USERNAME) has run COUNT queries since LAST_AUDIT_DATE."
    }
 
    database {
      dataSourceFrom = "JNDI"
      jndiDataSourceName = "java:comp/env/jdbc/stewardDB"
      slickProfileClassName = "slick.jdbc.MySQLProfile$"
    }
  } // end steward
 
  email {
  }
} // end shrine section
